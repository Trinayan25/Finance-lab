# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RRYkgDDoniD_MvImkdVqDxpsz_f5Lbig
"""
#Question No 1
import numpy as np
import matplotlib.pyplot as plt


S_0 = 100
T = 1
r = 0.08
sigma = 0.2
M_values = [5, 10, 15]
option_price = [ ]

def lookback_matrix(M, u, d):
    Payoff = [[[S_0, S_0]]]
    for a in range(M):
        S = [ ]
        for b in range(len(Payoff[a])):
            Q = Payoff[a][b][0]*u
            Q_max = max(Payoff[a][b][1], Q)
            S.append([Q, Q_max])
            Q = Payoff[a][b][0]*d
            Q_max = max(Payoff[a][b][1], Q)
            S.append([Q, Q_max])
        Payoff.append(S)
    return Payoff

def lookback_option(M, u, d, p):
    Payoff = [[[S_0, S_0]]]
    for a in range(M):
        S = [ ]
        for b in range(len(Payoff[a])):
            Q = Payoff[a][b][0]*u*p
            Q_max = p*max(Payoff[a][b][1], Q/p)
            S.append([Q, Q_max])
            Q = Payoff[a][b][0]*d*(1-p)
            Q_max = (1-p)*max(Payoff[a][b][1], Q/(1-p))
            S.append([Q, Q_max])
        Payoff.append(S)
    sol = 0
    for p1 in Payoff[len(Payoff)-1]:
        sol += (p1[1]-p1[0])
    return (sol)*np.exp(-r*T)

for M in M_values:
    dt = T/M
    u = np.exp(sigma*np.sqrt(dt) + (r-0.5*sigma*sigma)*dt)
    d = np.exp(-sigma*np.sqrt(dt) + (r-0.5*sigma*sigma)*dt)
    p = (np.exp(r*dt)-d)/(u-d)
    if(p<0 or p>1):
        print('For M = ', M, 'the no arbitrage principle is violated.')
        continue
    Value = lookback_option(M, u, d, p)
    option_price.append(Value)
    print('For M = ', M, 'the lookback option value is :', Value)

M_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]
option_price = [0]

for M in M_values[1:]:
    dt = T/M
    u = np.exp(sigma*np.sqrt(dt) + (r-0.5*sigma*sigma)*dt)
    d = np.exp(-sigma*np.sqrt(dt) + (r-0.5*sigma*sigma)*dt)
    p = (np.exp(r*dt)-d)/(u-d)
    if(p<0 or p>1):
        print('For M = ', M, 'the no arbitrage principle is violated.')
        continue
    Value = lookback_option(M, u, d, p)
    option_price.append(Value)

plt.plot(M_values, option_price)
plt.xlabel('M')
plt.ylabel('Lookback Option Price')
plt.title('Option_Price vs M')
plt.show()


M = 5
dt = T/M
u = np.exp(sigma*np.sqrt(dt) + (r-0.5*sigma*sigma)*dt)
d = np.exp(-sigma*np.sqrt(dt) + (r-0.5*sigma*sigma)*dt)
p = (np.exp(r*dt)-d)/(u-d)
if(p<0 or p>1):
    print('For M = ', M, 'the no arbitrage principle is violated')
else:
    mat = lookback_matrix(M, u, d)
    price_list = []
    for Payoff in mat[len(mat)-1]:
        price_list.append(Payoff[1]-Payoff[0])
    for a in range(6):
        print('Time point t = ', (5-a)*dt, 'the option price are:')
        print(price_list)
        temp = []
        for a in range(int(len(price_list)/2)):
            temp.append((p*price_list[2*a]+(1-p)*price_list[2*a+1])*np.exp(-r*dt))
        price_list = temp
